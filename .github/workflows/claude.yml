name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  discussion_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

concurrency:
  group: claude-code-${{ github.workflow }}-${{ github.event.pull_request.number || github.event.issue.number || github.run_id }}
  cancel-in-progress: false

jobs:
  claude-readonly:
    if: |
      (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
        (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
      ) &&
      !contains(fromJSON('["OWNER","MEMBER","COLLABORATOR"]'), (github.event.comment.author_association || github.event.review.author_association || github.event.issue.author_association)) &&
      !endsWith(github.actor, '[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          # prompt: 'Update the pull request description to include a summary of changes.'

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.anthropic.com/en/docs/claude-code/sdk#command-line for available options
          # claude_args: '--model claude-opus-4-1-20250805 --allowed-tools Bash(gh pr:*)'

  claude-write:
    if: >
      (
        (github.event_name == 'issue_comment' &&
         contains((github.event.comment.body || ''), '@claude')) ||
        (github.event_name == 'pull_request_review_comment' &&
         contains((github.event.comment.body || ''), '@claude')) ||
        (github.event_name == 'discussion_comment' &&
         contains((github.event.comment.body || ''), '@claude')) ||
        (github.event_name == 'pull_request_review' &&
         contains((github.event.review.body || ''), '@claude')) ||
        (github.event_name == 'issues' &&
         (contains((github.event.issue.body || ''), '@claude') ||
          contains((github.event.issue.title || ''), '@claude')))
      )
      && contains(fromJSON('["OWNER","MEMBER","COLLABORATOR"]'),
           (github.event.comment.author_association || github.event.review.author_association || github.event.issue.author_association))
      && !endsWith(github.actor, '[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      discussions: write
      id-token: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code (Write)
        id: claude-write
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          additional_permissions: |
            actions: read
          claude_args: |
            --max-turns 30
            --allowed-tools "Bash(gh api:*),Bash(gh issue close:*),Bash(gh issue comment:*),Bash(gh issue create:*),Bash(gh issue list:*),Bash(gh issue reopen:*),Bash(gh issue view:*),Bash(gh pr close:*),Bash(gh pr comment:*),Bash(gh pr create:*),Bash(gh pr diff:*),Bash(gh pr list:*),Bash(gh pr merge:*),Bash(gh pr view:*),Bash(gh search:*)"
