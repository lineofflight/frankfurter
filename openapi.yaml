openapi: '3.1.2'
info:
  title: Frankfurter
  version: 1.0.0
  description: Currency data API
  termsOfService: https://github.com/lineofflight/frankfurter?tab=MIT-1-ov-file
servers:
  - url: https://api.frankfurter.dev/v1
    description: Production server

components:
  schemas:
    date:
      type: string
      format: date
      example: '1999-01-04'
      description: 'A date (format: YYYY-MM-DD), all dates stored in UTC.'

    base:
      type: string
      enum:
        - AUD
        - BGN
        - BRL
        - CAD
        - CHF
        - CNY
        - CZK
        - DKK
        - EUR
        - GBP
        - HKD
        - HUF
        - IDR
        - ILS
        - INR
        - ISK
        - JPY
        - KRW
        - MXN
        - MYR
        - NOK
        - NZD
        - PHP
        - PLN
        - RON
        - SEK
        - SGD
        - THB
        - TRY
        - USD
        - ZAR
      description: 'Currency code following ISO4217'

    baseIn:
      allOf:
        - $ref: '#/components/schemas/base'
      default: EUR

    rates:
      type: object
      propertyNames:
        $ref: '#/components/schemas/base'
      additionalProperties:
        type: number # This restricts value to numbers. Doing this through "properties" requires listing every supported country.
        exclusiveMinimum: 0
        multipleOf: 0.0001
      minProperties: 1
      example:
        AUD: 1.91
        CAD: 1.8004
        CHF: 1.6168
        CYP: 0.58231

    ratesOnDate:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/base'
        date:
          $ref: '#/components/schemas/date'
        rates:
          $ref: '#/components/schemas/rates'
      required:
        - base
        - date
        - rates

    ratesByDate:
      type: object
      description: Mapping of date â†’ rates object
      propertyNames:
        $ref: '#/components/schemas/date'
      additionalProperties:
        $ref: '#/components/schemas/rates'
      minProperties: 1
      example:
        1999-01-04:
          AUD: 1.91
        1999-01-05:
          AUD: 1.8944
        1999-01-06:
          AUD: 1.882

  parameters:
    base:
      name: base
      in: query
      description: The base currency to convert from
      required: false
      schema:
        $ref: '#/components/schemas/baseIn'

    symbols:
      name: symbols
      in: query
      description: A comma-separated list of target currencies to include in the response
      example: USD,GBP
      required: false
      schema:
        type: array
        description: A list of currencies
        items:
          $ref: '#/components/schemas/base'
        minItems: 1
      explode: false

    start_date:
      name: start_date
      in: path
      description: 'The start date for the period'
      required: true
      schema:
        $ref: '#/components/schemas/date'

  responses:
    PeriodRateGetResponse:
      description: A list of exchange rates for the specified period
      content:
        application/json:
          schema:
            title: RatesDuringPeriod
            type: object
            properties:
              base:
                $ref: '#/components/schemas/base'
              start_date:
                $ref: '#/components/schemas/date'
              end_date:
                $ref: '#/components/schemas/date'
              rates:
                $ref: '#/components/schemas/ratesByDate'
            required:
              - base
              - start_date
              - end_date
              - rates
paths:
  /latest:
    get:
      summary: Retrieve the latest exchange rates
      tags:
        - Frankfurter
      parameters:
        - $ref: '#/components/parameters/base'
        - $ref: '#/components/parameters/symbols'
      responses:
        '200':
          description: A list of exchange rates for the latest working day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratesOnDate'

  /{date}:
    get:
      summary: Retrieve historical exchange rates for a specific date
      tags:
        - Frankfurter
      parameters:
        - name: date
          in: path
          description: 'The date for the historical rates'
          required: true
          schema:
            $ref: '#/components/schemas/date'
        - $ref: '#/components/parameters/base'
        - $ref: '#/components/parameters/symbols'
      responses:
        '200':
          description: A list of exchange rates for the specified date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ratesOnDate'

  /{start_date}..:
    get:
      summary: Retrieve exchange rates over a period
      tags:
        - Frankfurter
      parameters:
        - $ref: '#/components/parameters/start_date'
        - $ref: '#/components/parameters/base'
        - $ref: '#/components/parameters/symbols'
      responses:
        '200':
          $ref: '#/components/responses/PeriodRateGetResponse'

  /{start_date}..{end_date}:
    get:
      summary: Retrieve exchange rates over a period
      tags:
        - Frankfurter
      parameters:
        - $ref: '#/components/parameters/start_date'
        - name: end_date
          required: true
          in: path
          description: 'The end date for the period'
          schema:
            $ref: '#/components/schemas/date'
        - $ref: '#/components/parameters/base'
        - $ref: '#/components/parameters/symbols'
      responses:
        '200':
          $ref: '#/components/responses/PeriodRateGetResponse'

  /currencies:
    get:
      summary: Retrieve a list of supported currencies
      tags:
        - Frankfurter
      responses:
        '200':
          description: A list of supported currencies and their full names
          content:
            application/json:
              schema:
                type: object
                propertyNames:
                  $ref: '#/components/schemas/base'
                additionalProperties:
                  type: string # This restricts value to strings. Doing this through "properties" requires listing every supported country.
                  minLength: 1
                minProperties: 1
                example:
                  AUD: Australian Dollar
                  BGN: Bulgarian Lev
                  BRL: Brazilian Real
                  CAD: Canadian Dollar
